using AutoFixture.Kernel;
using AutoFixture.Xunit2;

namespace AutoFixture.AutoMoq
{
    /// <summary>
    /// Provides auto-generated dependencies generated by Moq using <seealso cref="AutoMoqCustomization"/>.
    /// </summary>
    public class AutoMoqDataAttribute : AutoDataAttribute
    {
        /// <summary>
        /// Creates a AutoDataAttribute that creates a fixture customized with an AutoMoqCustomization that
        /// specifies members of a mock will be automatically setup to retrieve the return values from a fixture
        /// </summary>
        public AutoMoqDataAttribute(): this(true, false, null) { }

        /// <summary>
        /// Creates a AutoDataAttribute that creates a fixture customized with an AutoMoqCustomization that
        /// will be defined by the specified values.
        /// </summary>
        /// <param name="configureMembers">
        /// Specifies whether members of a mock will be automatically setup to retrieve the return values from a fixture.
        /// </param>
        /// <param name="generateDelegates">
        /// If value is <c>true</c>, delegate requests are intercepted and created by Moq.
        /// Otherwise, if value is <c>false</c>, delegates are created by the AutoFixture kernel.
        /// </param>
        /// <param name="relay">
        /// Gets or sets the relay that will be added to <see cref="IFixture.ResidueCollectors"/> when
        /// <see cref="IFixture.Customize"/> is invoked.
        /// </param>
        public AutoMoqDataAttribute(bool configureMembers, bool generateDelegates = false, ISpecimenBuilder relay = null)
            : base(() => new Fixture().Customize(new AutoMoqCustomization
            {
                ConfigureMembers = configureMembers,
                GenerateDelegates = generateDelegates,
                Relay = relay ?? new MockRelay(),
            })) { }
    }
}
