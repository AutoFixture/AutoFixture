<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\Common.props" />
  <Import Project="..\Common.FSharp.props" />

  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0;net5.0</TargetFrameworks>
    <AssemblyTitle>AutoFixture.Idioms.FsCheck</AssemblyTitle>
    <AssemblyName>AutoFixture.Idioms.FsCheck</AssemblyName>
    <RootNamespace>AutoFixture.Idioms.FsCheck</RootNamespace>
    <Copyright>Copyright © Ploeh 2014</Copyright>
    <SignAssembly>False</SignAssembly>
    <!-- Disable source link support for F# projects as they don't support this feature. -->
    <SourceLinkCreate>false</SourceLinkCreate>
    <!-- Skip warning about invalid AssemblyInformationalVersion attribute in F# projects. And about wrong FSharp version during restore. -->
    <NoWarn>$(NoWarn);FS2003;NU1601</NoWarn>
    <Deterministic>false</Deterministic>

    <!-- NuGet options -->
    <PackageId>AutoFixture.Idioms.FsCheck</PackageId>
    <Title>AutoFixture Idioms.FsCheck</Title>
    <Description>Ubiquitous use of AutoFixture for unit testing has given rise to a number of idiomatic unit tests - unit tests that tend to follow common templates. The AutoFixture Idioms.FsCheck library encapsulates these idioms into reusable classes and methods.</Description>
    <Authors>Nikos Baxevanis,AutoFixture</Authors>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.fs" />
    <Compile Include="ReturnValueMustNotBeNullException.fs" />
    <Compile Include="FsCheckInvoker.fs" />
    <Compile Include="ReturnValueMustNotBeNullAssertion.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FsCheck" Version="[2.14.0,3.0.0)" />
    <PackageReference Include="FSharp.Core" Version="4.2.3" />
    <PackageReference Include="System.Net.Http" Version="4.3.4" Condition="'$(TargetFramework)'=='net462' Or '$(TargetFramework)'=='netstandard2.0'" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\AutoFixture\AutoFixture.csproj" />
    <ProjectReference Include="..\Idioms\Idioms.csproj" />
  </ItemGroup>

</Project>
