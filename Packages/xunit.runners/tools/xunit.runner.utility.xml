<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xunit.runner.utility</name>
    </assembly>
    <members>
        <member name="M:ExceptionExtensions.RethrowWithNoStackTraceLoss(System.Exception)">
            <summary>
            Rethrows an exception object without losing the existing stack trace information
            </summary>
            <param name="ex">The exception to re-throw.</param>
            <remarks>
            For more information on this technique, see
            http://www.dotnetjunkies.com/WebLog/chris.taylor/archive/2004/03/03/8353.aspx.
            The remote_stack_trace string is here to support Mono.
            </remarks>
        </member>
        <member name="M:ExceptionExtensions.Unwrap(System.Exception)">
            <summary>
            Unwraps an exception to remove any wrappers, like <see cref="T:System.Reflection.TargetInvocationException"/>.
            </summary>
            <param name="ex">The exception to unwrap.</param>
            <returns>The unwrapped exception.</returns>
        </member>
        <member name="T:Guard">
            <summary>
            Guard class, used for guard clauses and argument validation
            </summary>
        </member>
        <member name="M:Guard.ArgumentNotNull(System.String,System.Object)">
            <summary/>
        </member>
        <member name="M:Guard.ArgumentNotNullOrEmpty(System.String,System.Collections.IEnumerable)">
            <summary/>
        </member>
        <member name="M:Guard.ArgumentValid(System.String,System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Guard.FileExists(System.String,System.String)">
            <summary/>
        </member>
        <member name="T:Xunit.SourceInformation">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ISourceInformation"/>.
            </summary>
        </member>
        <member name="T:Xunit.LongLivedMarshalByRefObject">
            <summary>
            This class inherits from <see cref="T:System.MarshalByRefObject"/> and reimplements
            <see cref="M:Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService"/> in a way that allows the object to live
            longer than the remoting default lifetime (5 minutes).
            </summary>
        </member>
        <member name="M:Xunit.LongLivedMarshalByRefObject.InitializeLifetimeService">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.LongLivedMarshalByRefObject.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.SourceInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.SourceInformation"/> class.
            </summary>
        </member>
        <member name="M:Xunit.SourceInformation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary/>
        </member>
        <member name="M:Xunit.SourceInformation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.SourceInformation.FileName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.SourceInformation.LineNumber">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestMessageVisitor`1">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.IMessageSink"/> that provides several Visit methods that
            can provide access to specific message types without the burden of casting. It also record
            when it sees a completion message, and sets the <see cref="P:Xunit.TestMessageVisitor`1.Finished"/> event appropriately.
            </summary>
            <typeparam name="TCompleteMessage">The type of the completion message.</typeparam>
        </member>
        <member name="T:Xunit.TestMessageVisitor">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.IMessageSink"/> that provides several Visit methods that
            can provide access to specific message types without the burden of casting.
            </summary>
        </member>
        <member name="M:Xunit.TestMessageVisitor.OnMessage(Xunit.Abstractions.IMessageSinkMessage)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IAfterTestFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IAfterTestFinished"/> is sent to the message sink.
            </summary>
            <param name="afterTestFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IAfterTestStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IAfterTestStarting"/> is sent to the message sink.
            </summary>
            <param name="afterTestStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IBeforeTestFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IBeforeTestFinished"/> is sent to the message sink.
            </summary>
            <param name="beforeTestFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IBeforeTestStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IBeforeTestStarting"/> is sent to the message sink.
            </summary>
            <param name="beforeTestStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IDiscoveryCompleteMessage)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IDiscoveryCompleteMessage"/> is sent to the message sink.
            </summary>
            <param name="discoveryComplete">The message.</param>
            <returns>Return <c>true</c> to continue discovering tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.IErrorMessage)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.IErrorMessage"/> is sent to the message sink.
            </summary>
            <param name="error">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestAssemblyFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestAssemblyFinished"/> is sent to the message sink.
            </summary>
            <param name="assemblyFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestAssemblyStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestAssemblyStarting"/> is sent to the message sink.
            </summary>
            <param name="assemblyStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestCaseDiscoveryMessage)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestCaseDiscoveryMessage"/> is sent to the message sink.
            </summary>
            <param name="testCaseDiscovered">The message.</param>
            <returns>Return <c>true</c> to continue discovering tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestCaseFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestCaseFinished"/> is sent to the message sink.
            </summary>
            <param name="testCaseFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestCaseStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestCaseStarting"/> is sent to the message sink.
            </summary>
            <param name="testCaseStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassConstructionFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassConstructionFinished"/> is sent to the message sink.
            </summary>
            <param name="testClassConstructionFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassConstructionStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassConstructionStarting"/> is sent to the message sink.
            </summary>
            <param name="testClassConstructionStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassDisposeFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassDisposeFinished"/> is sent to the message sink.
            </summary>
            <param name="testClassDisposedFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassDisposeStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassDisposeStarting"/> is sent to the message sink.
            </summary>
            <param name="testClassDisposeStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassFinished"/> is sent to the message sink.
            </summary>
            <param name="testClassFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestClassStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestClassStarting"/> is sent to the message sink.
            </summary>
            <param name="testClassStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestCollectionFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestCollectionFinished"/> is sent to the message sink.
            </summary>
            <param name="testCollectionFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestCollectionStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestCollectionStarting"/> is sent to the message sink.
            </summary>
            <param name="testCollectionStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestFailed)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestFailed"/> is sent to the message sink.
            </summary>
            <param name="testFailed">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestFinished"/> is sent to the message sink.
            </summary>
            <param name="testFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestMethodFinished)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestMethodFinished"/> is sent to the message sink.
            </summary>
            <param name="testMethodFinished">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestMethodStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestMethodStarting"/> is sent to the message sink.
            </summary>
            <param name="testMethodStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestPassed)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestPassed"/> is sent to the message sink.
            </summary>
            <param name="testPassed">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestSkipped)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestSkipped"/> is sent to the message sink.
            </summary>
            <param name="testSkipped">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor.Visit(Xunit.Abstractions.ITestStarting)">
            <summary>
            Called when an instance of <see cref="T:Xunit.Abstractions.ITestStarting"/> is sent to the message sink.
            </summary>
            <param name="testStarting">The message.</param>
            <returns>Return <c>true</c> to continue executing tests; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Xunit.TestMessageVisitor`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestMessageVisitor`1"/> class.
            </summary>
        </member>
        <member name="M:Xunit.TestMessageVisitor`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.TestMessageVisitor`1.OnMessage(Xunit.Abstractions.IMessageSinkMessage)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestMessageVisitor`1.Finished">
            <summary>
            This event is trigged when the completion message has been seen.
            </summary>
        </member>
        <member name="T:Xunit.TestCaseMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCaseMessage"/>.
            </summary>
        </member>
        <member name="T:Xunit.TestCollectionMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCollectionMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCollectionMessage.#ctor(Xunit.Abstractions.ITestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCollectionMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestCollectionMessage.TestCollection">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.TestCaseMessage.#ctor(Xunit.Abstractions.ITestCase)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCaseMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestCaseMessage.TestCase">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestClassMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestClassMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestClassMessage.#ctor(Xunit.Abstractions.ITestCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestClassMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestClassMessage.ClassName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestMessage.#ctor(Xunit.Abstractions.ITestCase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestMessage.TestDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestResultMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestResultMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestResultMessage.#ctor(Xunit.Abstractions.ITestCase,System.String,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestResultMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestResultMessage.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestResultMessage.Output">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.DiscoveryCompleteMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.IDiscoveryCompleteMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.DiscoveryCompleteMessage.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.DiscoveryCompleteMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.DiscoveryCompleteMessage.Warnings">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.ErrorMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.IErrorMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.ErrorMessage.#ctor(System.String[],System.String[],System.String[],System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.ErrorMessage"/> class.
            </summary>
        </member>
        <member name="P:Xunit.ErrorMessage.ExceptionTypes">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.ErrorMessage.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.ErrorMessage.StackTraces">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.ErrorMessage.ExceptionParentIndices">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestAssemblyFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestAssemblyFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestAssemblyFinished.#ctor(Xunit.Abstractions.IAssemblyInfo,System.Decimal,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestAssemblyFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestAssemblyFinished.Assembly">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyFinished.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyFinished.TestsFailed">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyFinished.TestsRun">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyFinished.TestsSkipped">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestAssemblyStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestAssemblyStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestAssemblyStarting.#ctor(System.String,System.String,System.DateTime,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestAssemblyStarting"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestAssemblyStarting.AssemblyFileName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyStarting.ConfigFileName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyStarting.StartTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyStarting.TestEnvironment">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestAssemblyStarting.TestFrameworkDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestCaseDiscoveryMessage">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCaseDiscoveryMessage"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCaseDiscoveryMessage.#ctor(Xunit.Abstractions.ITestCase)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCaseDiscoveryMessage"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestCaseFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCaseFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCaseFinished.#ctor(Xunit.Abstractions.ITestCase,System.Decimal,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCaseFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestCaseFinished.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCaseFinished.TestsFailed">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCaseFinished.TestsRun">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCaseFinished.TestsSkipped">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestCaseStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCaseStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCaseStarting.#ctor(Xunit.Abstractions.ITestCase)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCaseStarting"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestClassFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestClassFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestClassFinished.#ctor(Xunit.Abstractions.ITestCollection,System.String,System.Decimal,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestClassFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestClassFinished.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestClassFinished.TestsFailed">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestClassFinished.TestsRun">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestClassFinished.TestsSkipped">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestClassStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestClassStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestClassStarting.#ctor(Xunit.Abstractions.ITestCollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestClassStarting"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestCollectionFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCollectionFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCollectionFinished.#ctor(Xunit.Abstractions.ITestCollection,System.Decimal,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCollectionFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestCollectionFinished.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCollectionFinished.TestsFailed">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCollectionFinished.TestsRun">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestCollectionFinished.TestsSkipped">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestCollectionStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestCollectionStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestCollectionStarting.#ctor(Xunit.Abstractions.ITestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestCollectionStarting"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestFailed">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestFailed"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestFailed.#ctor(Xunit.Abstractions.ITestCase,System.String,System.Decimal,System.String,System.String[],System.String[],System.String[],System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestFailed"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestFailed.ExceptionTypes">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestFailed.Messages">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestFailed.StackTraces">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestFailed.ExceptionParentIndices">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestFinished.#ctor(Xunit.Abstractions.ITestCase,System.String,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestFinished.ExecutionTime">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestFinished.Output">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestMethodFinished">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestMethodFinished"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestMethodFinished.#ctor(Xunit.Abstractions.ITestCollection,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestMethodFinished"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestMethodFinished.ClassName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestMethodFinished.MethodName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestMethodStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestMethodStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestMethodStarting.#ctor(Xunit.Abstractions.ITestCollection,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestMethodStarting"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestMethodStarting.ClassName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestMethodStarting.MethodName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestPassed">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestPassed"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestPassed.#ctor(Xunit.Abstractions.ITestCase,System.String,System.Decimal,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestPassed"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestSkipped">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestSkipped"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestSkipped.#ctor(Xunit.Abstractions.ITestCase,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestSkipped"/> class.
            </summary>
        </member>
        <member name="P:Xunit.TestSkipped.Reason">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.TestStarting">
            <summary>
            Default implementation of <see cref="T:Xunit.Abstractions.ITestStarting"/>.
            </summary>
        </member>
        <member name="M:Xunit.TestStarting.#ctor(Xunit.Abstractions.ITestCase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestStarting"/> class.
            </summary>
        </member>
        <member name="T:Xunit.TestFrameworkOptions">
            <summary>
            Represents options passed to a test framework for discovery or execution.
            </summary>
        </member>
        <member name="M:Xunit.TestFrameworkOptions.GetValue``1(System.String,``0)">
            <summary>
            Gets a value from the options collection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <param name="defaultValue">The default value to use if the value is not present.</param>
            <returns>Returns the value.</returns>
        </member>
        <member name="M:Xunit.TestFrameworkOptions.SetValue``1(System.String,``0)">
            <summary>
            Sets a value into the options collection.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="name">The name of the value.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Xunit.XunitDiscoveryOptions">
            <summary>
            Represents discovery options for xUnit.net v2 tests.
            </summary>
        </member>
        <member name="T:Xunit.XunitExecutionOptions">
            <summary>
            Represents execution options for xUnit.net v2 tests.
            </summary>
        </member>
        <member name="P:Xunit.XunitExecutionOptions.SynchronousMessageReporting">
            <summary>
            Gets or sets a flag that determines whether xunit should report test results synchronously.
            </summary>
        </member>
        <member name="P:Xunit.XunitExecutionOptions.DisableParallelization">
            <summary>
            Gets or sets a flag to disable parallelization.
            </summary>
        </member>
        <member name="P:Xunit.XunitExecutionOptions.MaxParallelThreads">
            <summary>
            Gets or sets the maximum number of threads to use when running tests in parallel.
            If set to 0 (the default value), does not limit the number of threads.
            </summary>
        </member>
        <member name="T:Xunit.XunitFilters">
            <summary>
            Represents a set of filters for an <see cref="T:Xunit.XunitProject"/>.
            </summary>
        </member>
        <member name="M:Xunit.XunitFilters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.XunitFilters"/> class.
            </summary>
        </member>
        <member name="M:Xunit.XunitFilters.Filter(Xunit.Abstractions.ITestCase)">
            <summary>
            Filters the given method using the defined filter values.
            </summary>
            <param name="testCase">The test case to filter.</param>
            <returns>Returns <c>true</c> if the test case passed the filter; returns <c>false</c> otherwise.</returns>
        </member>
        <member name="P:Xunit.XunitFilters.ExcludedTraits">
            <summary>
            Gets the set of trait filters for tests to exclude.
            </summary>
        </member>
        <member name="P:Xunit.XunitFilters.IncludedTraits">
            <summary>
            Gets the set of trait filters for tests to include.
            </summary>
        </member>
        <member name="T:Xunit.XunitProjectAssembly">
            <summary>
            Represents an assembly in an <see cref="T:Xunit.XunitProject"/>.
            </summary>
        </member>
        <member name="M:Xunit.XunitProjectAssembly.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.XunitProjectAssembly"/> class.
            </summary>
        </member>
        <member name="P:Xunit.XunitProjectAssembly.AssemblyFilename">
            <summary>
            Gets or sets the assembly filename.
            </summary>
        </member>
        <member name="P:Xunit.XunitProjectAssembly.ConfigFilename">
            <summary>
            Gets or sets the config filename.
            </summary>
        </member>
        <member name="P:Xunit.XunitProjectAssembly.ShadowCopy">
            <summary>
            Gets or sets a value indicating whether to shadow copy the assembly
            when running the tests.
            </summary>
        </member>
        <member name="T:Xunit.NullSourceInformationProvider">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.ISourceInformationProvider"/> that always returns no
            source information. Useful for test runners which don't need or cannot provide source
            information during discovery.
            </summary>
        </member>
        <member name="M:Xunit.NullSourceInformationProvider.GetSourceInformation(Xunit.Abstractions.ITestCase)">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.IXunit1Executor">
            <summary>
            Represents a wrapper around the Executor class from xUnit.net v1.
            </summary>
        </member>
        <member name="M:Xunit.IXunit1Executor.EnumerateTests(System.Web.UI.ICallbackEventHandler)">
            <summary>
            Enumerates the tests in the assembly.
            </summary>
            <param name="handler">The callback handler used to return information.</param>
        </member>
        <member name="M:Xunit.IXunit1Executor.RunTests(System.String,System.Collections.Generic.List{System.String},System.Web.UI.ICallbackEventHandler)">
            <summary>
            Runs the tests in a class.
            </summary>
            <param name="type">The class to run.</param>
            <param name="methods">The methods in the class to run.</param>
            <param name="handler">The callback handler used to return information.</param>
        </member>
        <member name="P:Xunit.IXunit1Executor.TestFrameworkDisplayName">
            <summary>
            Gets the display name of the test framework.
            </summary>
        </member>
        <member name="T:Xunit.TestClassCallbackHandler">
            <summary>
            A handler that dispatches v1 Executor messages from running a test class.
            </summary>
        </member>
        <member name="T:Xunit.XmlNodeCallbackHandler">
            <summary>
            An implementation of <see cref="T:System.Web.UI.ICallbackEventHandler"/> used to translate v1 Executor XML
            messages.
            </summary>
        </member>
        <member name="M:Xunit.XmlNodeCallbackHandler.#ctor(System.Predicate{System.Xml.XmlNode},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.XmlNodeCallbackHandler"/> class.
            </summary>
            <param name="callback">The callback to call when each XML node arrives.</param>
            <param name="lastNodeName">The name of the expected final XML node, which triggers <see cref="P:Xunit.XmlNodeCallbackHandler.LastNodeArrived"/>.</param>
        </member>
        <member name="M:Xunit.XmlNodeCallbackHandler.OnXmlNode(System.Xml.XmlNode)">
            <summary>
            Called when an XML node arrives. Dispatches the XML node to the callback.
            </summary>
            <param name="node">The arriving XML node.</param>
            <returns>Return <c>true</c> to continue running tests; <c>false</c> to stop running tests.</returns>
        </member>
        <member name="P:Xunit.XmlNodeCallbackHandler.LastNode">
            <summary>
            Gets the last node that was sent.
            </summary>
        </member>
        <member name="P:Xunit.XmlNodeCallbackHandler.LastNodeArrived">
            <summary>
            Gets an event that is triggered when the last node has arrived.
            </summary>
        </member>
        <member name="M:Xunit.TestClassCallbackHandler.#ctor(System.Collections.Generic.IList{Xunit.Xunit1TestCase},Xunit.Abstractions.IMessageSink)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.TestClassCallbackHandler"/> class.
            </summary>
            <param name="testCases">The test cases that are being run.</param>
            <param name="messageSink">The message sink to call with the translated results.</param>
        </member>
        <member name="M:Xunit.TestClassCallbackHandler.OnXmlNode(System.Xml.XmlNode)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.TestClassCallbackHandler.TestClassResults">
            <summary>
            Gets the test class results, after the execution has completed.
            </summary>
        </member>
        <member name="T:Xunit.RunSummary">
            <summary>
            Collects statistics from running tests.
            </summary>
        </member>
        <member name="F:Xunit.RunSummary.Continue">
            <summary>
            A flag that indicates whether or not to continue running tests.
            </summary>
        </member>
        <member name="F:Xunit.RunSummary.Total">
            <summary>
            The total number of tests run.
            </summary>
        </member>
        <member name="F:Xunit.RunSummary.Failed">
            <summary>
            The number of tests that failed.
            </summary>
        </member>
        <member name="F:Xunit.RunSummary.Skipped">
            <summary>
            The number of tests that were skipped.
            </summary>
        </member>
        <member name="F:Xunit.RunSummary.Time">
            <summary>
            The time spent running the tests.
            </summary>
        </member>
        <member name="M:Xunit.RunSummary.Aggregate(Xunit.RunSummary)">
            <summary>
            Aggregates the current results with the other results.
            </summary>
            <param name="other">The other result.</param>
        </member>
        <member name="M:Xunit.RunSummary.Reset">
            <summary>
            Resets the counted results back to zero.
            </summary>
        </member>
        <member name="T:Xunit.Xunit1AssemblyInfo">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.IAssemblyInfo"/> for xUnit.net v1.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1AssemblyInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit1AssemblyInfo"/> class.
            </summary>
            <param name="assemblyFileName">The filename of the test assembly.</param>
        </member>
        <member name="P:Xunit.Xunit1AssemblyInfo.AssemblyFileName">
            <summary>
            Gets the filename of the test assembly.
            </summary>
        </member>
        <member name="T:Xunit.Xunit1Executor">
            <summary>
            Default implementation of <see cref="T:Xunit.IXunit1Executor"/>. Creates a remote app domain for the test
            assembly to be loaded into. Disposing of the executor releases the app domain.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1Executor.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit1Executor"/> class.
            </summary>
            <param name="testAssemblyFileName">The filename of the test assembly.</param>
            <param name="configFileName">The filename of the configuration file.</param>
            <param name="shadowCopy">Set to <c>true</c> to enable shadow copying the assemblies.</param>
        </member>
        <member name="M:Xunit.Xunit1Executor.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1Executor.EnumerateTests(System.Web.UI.ICallbackEventHandler)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1Executor.RunTests(System.String,System.Collections.Generic.List{System.String},System.Web.UI.ICallbackEventHandler)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1Executor.TestFrameworkDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.VisualStudioSourceInformationProvider">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.ISourceInformationProvider"/> that will provide source information
            when running inside of Visual Studio (via the DiaSession class).
            </summary>
        </member>
        <member name="M:Xunit.VisualStudioSourceInformationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.VisualStudioSourceInformationProvider"/> class.
            </summary>
            <param name="assemblyFileName">The assembly file name.</param>
        </member>
        <member name="M:Xunit.VisualStudioSourceInformationProvider.GetSourceInformation(Xunit.Abstractions.ITestCase)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.VisualStudioSourceInformationProvider.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.IFrontController">
            <summary>
            Represents a class which acts as a front controller for unit testing frameworks.
            This allows runners to run tests from multiple unit testing frameworks (in particular,
            hiding the differences between xUnit.net v1 and v2 tests).
            </summary>
        </member>
        <member name="T:Xunit.Xunit1">
            <summary>
            This class be used to do discovery and execution of xUnit.net v1 tests
            using a reflection-based implementation of <see cref="T:Xunit.Abstractions.IAssemblyInfo"/>.
            Runner authors are strongly encouraged to use <see cref="T:Xunit.XunitFrontController"/>
            instead of using this class directly.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1.#ctor(Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit1"/> class.
            </summary>
            <param name="sourceInformationProvider">Source code information provider.</param>
            <param name="assemblyFileName">The test assembly.</param>
            <param name="configFileName">The test assembly configuration file.</param>
            <param name="shadowCopy">If set to <c>true</c>, runs tests in a shadow copied app domain, which allows
            tests to be discovered and run without locking assembly files on disk.</param>
        </member>
        <member name="M:Xunit.Xunit1.CreateExecutor(System.String,System.String,System.Boolean)">
            <summary>
            Creates a wrapper to call the Executor call from xUnit.net v1.
            </summary>
            <param name="testAssemblyFileName">The filename of the assembly under test.</param>
            <param name="configFileName">The configuration file to be used for the app domain (optional, may be <c>null</c>).</param>
            <param name="shadowCopy">Whether to enable shadow copy for the app domain.</param>
            <returns>The executor wrapper.</returns>
        </member>
        <member name="M:Xunit.Xunit1.Deserialize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1.Find(System.Boolean,Xunit.Abstractions.IMessageSink)">
            <summary>
            Starts the process of finding all xUnit.net v1 tests in an assembly.
            </summary>
            <param name="includeSourceInformation">Whether to include source file information, if possible.</param>
            <param name="messageSink">The message sink to report results back to.</param>
        </member>
        <member name="M:Xunit.Xunit1.Xunit#Abstractions#ITestFrameworkDiscoverer#Find(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1.Find(System.String,System.Boolean,Xunit.Abstractions.IMessageSink)">
            <summary>
            Starts the process of finding all xUnit.net v1 tests in a class.
            </summary>
            <param name="typeName">The fully qualified type name to find tests in.</param>
            <param name="includeSourceInformation">Whether to include source file information, if possible.</param>
            <param name="messageSink">The message sink to report results back to.</param>
        </member>
        <member name="M:Xunit.Xunit1.Xunit#Abstractions#ITestFrameworkDiscoverer#Find(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1.Run(Xunit.Abstractions.IMessageSink)">
            <summary>
            Starts the process of running all the xUnit.net v1 tests in the assembly.
            </summary>
            <param name="messageSink">The message sink to report results back to.</param>
        </member>
        <member name="M:Xunit.Xunit1.Run(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink)">
            <summary>
            Starts the process of running all the xUnit.net v1 tests.
            </summary>
            <param name="testCases">The test cases to run; if null, all tests in the assembly are run.</param>
            <param name="messageSink">The message sink to report results back to.</param>
        </member>
        <member name="M:Xunit.Xunit1.Serialize(Xunit.Abstractions.ITestCase)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1.TestFrameworkDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.Xunit1ReflectionWrapper">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.IAssemblyInfo"/>, <see cref="T:Xunit.Abstractions.ITypeInfo"/>
            and <see cref="T:Xunit.Abstractions.IMethodInfo"/> for xUnit.net v1 tests.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1ReflectionWrapper.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit1ReflectionWrapper"/> class.
            </summary>
            <param name="assemblyFileName">The assembly under test.</param>
            <param name="typeName">The type under test.</param>
            <param name="methodName">The method under test.</param>
        </member>
        <member name="P:Xunit.Xunit1ReflectionWrapper.AssemblyFileName">
            <summary>
            Gets the name of the assembly under test.
            </summary>
        </member>
        <member name="P:Xunit.Xunit1ReflectionWrapper.MethodName">
            <summary>
            Gets the name of the method under test.
            </summary>
        </member>
        <member name="P:Xunit.Xunit1ReflectionWrapper.TypeName">
            <summary>
            Gets the name of the type under test.
            </summary>
        </member>
        <member name="P:Xunit.Xunit1ReflectionWrapper.UniqueID">
            <summary>
            Gets the unique ID for the test.
            </summary>
        </member>
        <member name="T:Xunit.Xunit1TestCase">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.ITestCase"/> that adapts xUnit.net v1's XML-based APIs
            into xUnit.net v2's object-based APIs.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1TestCase.#ctor(System.String,System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String)">
            <summary>
            Initializes a new instance  of the <see cref="T:Xunit.Xunit1TestCase"/> class.
            </summary>
            <param name="assemblyFileName">The assembly under test.</param>
            <param name="typeName">The type under test.</param>
            <param name="methodName">The method under test.</param>
            <param name="displayName">The display name of the unit test.</param>
            <param name="traits">The traits of the unit test.</param>
            <param name="skipReason">The skip reason, if the test is skipped.</param>
        </member>
        <member name="M:Xunit.Xunit1TestCase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1TestCase.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit1TestCase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.Class">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.Method">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.SkipReason">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.SourceInformation">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.TestCollection">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.Traits">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.UniqueID">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCase.Arguments">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.Xunit1TestCollection">
            <summary>
            An implementation of <see cref="T:Xunit.Abstractions.ITestCollection"/> that is used for xUnit.net v1 tests. A single test
            collection is used for the entire test assembly, since xUnit.net v1 does not support parallelization.
            </summary>
        </member>
        <member name="M:Xunit.Xunit1TestCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit1TestCollection"/> class.
            </summary>
            <param name="assemblyFileName">The assembly under test.</param>
        </member>
        <member name="P:Xunit.Xunit1TestCollection.CollectionDefinition">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCollection.DisplayName">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit1TestCollection.ID">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.XunitFrontController">
            <summary>
            Default implementation of <see cref="T:Xunit.IFrontController"/> which supports running tests from
            both xUnit.net v1 and v2.
            </summary>
        </member>
        <member name="M:Xunit.XunitFrontController.#ctor">
            <summary>
            This constructor is for unit testing purposes only.
            </summary>
        </member>
        <member name="M:Xunit.XunitFrontController.#ctor(System.String,System.String,System.Boolean,Xunit.Abstractions.ISourceInformationProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.XunitFrontController"/> class.
            </summary>
            <param name="assemblyFileName">The test assembly.</param>
            <param name="configFileName">The test assembly configuration file.</param>
            <param name="shadowCopy">If set to <c>true</c>, runs tests in a shadow copied app domain, which allows
            <param name="sourceInformationProvider">The source information provider. If <c>null</c>, uses the default (<see cref="T:Xunit.VisualStudioSourceInformationProvider"/>).</param>
            tests to be discovered and run without locking assembly files on disk.</param>
        </member>
        <member name="M:Xunit.XunitFrontController.CreateInnerController">
            <summary>
            FOR INTERNAL USE ONLY.
            </summary>
        </member>
        <member name="M:Xunit.XunitFrontController.Deserialize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.Find(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.Find(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.RunAll(Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.RunTests(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.XunitFrontController.Serialize(Xunit.Abstractions.ITestCase)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.XunitFrontController.TestFrameworkDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.Xunit2Discoverer">
            <summary>
            This class be used to do discovery of xUnit.net v2 tests, via any implementation
            of <see cref="T:Xunit.Abstractions.IAssemblyInfo"/>, including AST-based runners like CodeRush and
            Resharper. Runner authors who are not using AST-based discovery are strongly
            encouraged to use <see cref="T:Xunit.XunitFrontController"/> instead.
            </summary>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.#ctor(Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit2Discoverer"/> class. The location
            of xunit.execution.dll is implied based on the location of the test assembly.
            </summary>
            <param name="sourceInformationProvider">The source code information provider.</param>
            <param name="assemblyInfo">The assembly to use for discovery</param>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.#ctor(Xunit.Abstractions.ISourceInformationProvider,Xunit.Abstractions.IAssemblyInfo,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit2Discoverer"/> class. This constructor
            is usually used by AST-based runners which may not have access to a test assembly on disk,
            but can point to xunit.execution.dll (by following the project reference in Visual Studio).
            </summary>
            <param name="sourceInformationProvider">The source code information provider.</param>
            <param name="assemblyInfo">The assembly to use for discovery</param>
            <param name="xunitExecutionAssemblyPath">The path on disk of xunit.execution.dll</param>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Find(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.XunitDiscoveryOptions)">
            <summary>
            Starts the process of finding all xUnit.net v2 tests in an assembly.
            </summary>
            <param name="includeSourceInformation">Whether to include source file information, if possible.</param>
            <param name="messageSink">The message sink to report results back to.</param>
            <param name="options">The options used by the test framework during discovery.</param>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Xunit#Abstractions#ITestFrameworkDiscoverer#Find(System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Find(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.XunitDiscoveryOptions)">
            <summary>
            Starts the process of finding all xUnit.net v2 tests in a class.
            </summary>
            <param name="typeName">The fully qualified type name to find tests in.</param>
            <param name="includeSourceInformation">Whether to include source file information, if possible.</param>
            <param name="messageSink">The message sink to report results back to.</param>
            <param name="options">The options used by the test framework during discovery.</param>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Xunit#Abstractions#ITestFrameworkDiscoverer#Find(System.String,System.Boolean,Xunit.Abstractions.IMessageSink,Xunit.Abstractions.ITestFrameworkOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit2Discoverer.Serialize(Xunit.Abstractions.ITestCase)">
            <inheritdoc/>
        </member>
        <member name="P:Xunit.Xunit2Discoverer.Framework">
            <summary>
            Returns the test framework from the remote app domain.
            </summary>
        </member>
        <member name="P:Xunit.Xunit2Discoverer.TestFrameworkDisplayName">
            <inheritdoc/>
        </member>
        <member name="T:Xunit.Xunit2">
            <summary>
            This class be used to do discovery and execution of xUnit.net v2 tests
            using a reflection-based implementation of <see cref="T:Xunit.Abstractions.IAssemblyInfo"/>.
            </summary>
        </member>
        <member name="M:Xunit.Xunit2.#ctor(Xunit.Abstractions.ISourceInformationProvider,System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Xunit.Xunit2"/> class.
            </summary>
            <param name="sourceInformationProvider">The source code information provider.</param>
            <param name="assemblyFileName">The test assembly.</param>
            <param name="configFileName">The test assembly configuration file.</param>
            <param name="shadowCopy">If set to <c>true</c>, runs tests in a shadow copied app domain, which allows
            tests to be discovered and run without locking assembly files on disk.</param>
        </member>
        <member name="M:Xunit.Xunit2.Deserialize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit2.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.Xunit2.Run(Xunit.Abstractions.IMessageSink,Xunit.XunitDiscoveryOptions,Xunit.XunitExecutionOptions)">
            <summary>
            Starts the process of running all the xUnit.net v2 tests in the assembly.
            </summary>
            <param name="messageSink">The message sink to report results back to.</param>
            <param name="discoveryOptions">The options to be used during test discovery.</param>
            <param name="executionOptions">The options to be used during test execution.</param>
        </member>
        <member name="M:Xunit.Xunit2.Run(System.Collections.Generic.IEnumerable{Xunit.Abstractions.ITestCase},Xunit.Abstractions.IMessageSink,Xunit.XunitExecutionOptions)">
            <summary>
            Starts the process of running the selected xUnit.net v2 tests.
            </summary>
            <param name="testCases">The test cases to run; if null, all tests in the assembly are run.</param>
            <param name="messageSink">The message sink to report results back to.</param>
            <param name="executionOptions">The options to be used during test execution.</param>
        </member>
        <member name="T:Xunit.ExceptionUtility">
            <summary>
            Utility classes for dealing with Exception objects.
            </summary>
        </member>
        <member name="M:Xunit.ExceptionUtility.CombineMessages(Xunit.Abstractions.IFailureInformation)">
            <summary>
            Combines multiple levels of messages into a single message.
            </summary>
            <param name="failureInfo">The failure information from which to get the messages.</param>
            <returns>The combined string.</returns>
        </member>
        <member name="M:Xunit.ExceptionUtility.CombineStackTraces(Xunit.Abstractions.IFailureInformation)">
            <summary>
            Combines multiple levels of stack traces into a single stack trace.
            </summary>
            <param name="failureInfo">The failure information from which to get the stack traces.</param>
            <returns>The combined string.</returns>
        </member>
        <member name="T:Xunit.ExecutionSummary">
            <summary>
            Collects execution totals for a group of test cases.
            </summary>
        </member>
        <member name="P:Xunit.ExecutionSummary.Total">
            <summary>
            Gets or set the total number of tests run.
            </summary>
        </member>
        <member name="P:Xunit.ExecutionSummary.Failed">
            <summary>
            Gets or sets the number of failed tests.
            </summary>
        </member>
        <member name="P:Xunit.ExecutionSummary.Skipped">
            <summary>
            Gets or sets the number of skipped tests.
            </summary>
        </member>
        <member name="P:Xunit.ExecutionSummary.Time">
            <summary>
            Gets or sets the total execution time for the tests.
            </summary>
        </member>
        <member name="T:Xunit.AssemblyHelper">
            <summary>
            This class provides assistance with assembly resolution for missing assemblies. Runners may
            need to use <see cref="M:Xunit.AssemblyHelper.SubscribeResolve"/> to help automatically resolve missing assemblies
            when running tests.
            </summary>
        </member>
        <member name="M:Xunit.AssemblyHelper.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Xunit.AssemblyHelper.SubscribeResolve">
            <summary>
            Subscribes to the current <see cref="T:System.AppDomain"/> <see cref="E:System.AppDomain.AssemblyResolve"/> event, to
            provide automatic assembly resolution for assemblies in the runner.
            </summary>
            <returns>An object which, when disposed, un-subscribes.</returns>
        </member>
        <member name="T:Xunit.RemotingUtility">
            <summary>
            Internal helper class for remoting.
            </summary>
        </member>
        <member name="M:Xunit.RemotingUtility.CleanUpRegisteredChannels">
            <summary>
            Unregisters any remoting channels.
            </summary>
            <remarks>
            If there are any registered remoting channels, then MarshalByRefObjects
            don't work. Based on bug #9749, it's clear that MSTest (at least through
            Visual Studio 2010) registers remoting channels when it runs but doesn't
            clean them up when it's done. Right now, the only way to reliably surface
            this issue is through MSBuild (as per the bug repro), so for the moment
            this work-around code is limited to the MSBuild runner.
            </remarks>
        </member>
        <member name="T:Xunit.XunitProject">
            <summary>
            FOR INTERNAL USE ONLY.
            </summary>
        </member>
        <member name="M:Xunit.XunitProject.#ctor">
            <summary/>
        </member>
        <member name="M:Xunit.XunitProject.Add(Xunit.XunitProjectAssembly)">
            <summary/>
        </member>
        <member name="M:Xunit.XunitProject.GetEnumerator">
            <summary/>
        </member>
        <member name="P:Xunit.XunitProject.Assemblies">
            <summary/>
        </member>
        <member name="P:Xunit.XunitProject.Filters">
            <summary/>
        </member>
        <member name="P:Xunit.XunitProject.Output">
            <summary/>
        </member>
    </members>
</doc>
